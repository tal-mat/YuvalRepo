// import { useEffect, useRef } from 'react';
// import useSpline from '@splinetool/r3f-spline';
// import { OrthographicCamera } from '@react-three/drei';
//
// export default function Scene({ ...props }) {
//     const { nodes, materials, animations } = useSpline(
//         'https://prod.spline.design/acP0Eau3Hk7DEu1O/scene.splinecode'
//     );
//
//     console.log('Animations from Spline:', animations); // Check what is returned
//
//     const sphereRef = useRef();
//
//     // Apply animations to the sphere
//     useEffect(() => {
//         if (animations && animations.length > 0) {
//             // Find animation for the sphere
//             const sphereAnimation = animations.find(
//                 (a) => a.name === 'Sphere' || a.target.name === 'Sphere'
//             );
//
//             if (sphereAnimation && sphereRef.current) {
//                 // Play the animation
//                 sphereAnimation.reset().play();
//             } else {
//                 console.warn('Animation or sphereRef is not available.');
//             }
//         } else {
//             console.warn('No animations available.');
//         }
//     }, [animations]);
//
//     return (
//         <>
//             <color attach="background" args={['#000000']} />
//             <group {...props} dispose={null}>
//                 <scene name="Scene">
//                     <mesh
//                         name="Cube"
//                         geometry={nodes.Cube.geometry}
//                         material={materials['Cube Material']}
//                         castShadow
//                         receiveShadow
//                         position={[-910.82, -124.93, -1002.83]}
//                         rotation={[-1.52, -0.09, 0]}
//                         scale={[3.43, 8.26, 1]}
//                     />
//                     <mesh
//                         ref={sphereRef}
//                         name="Sphere"
//                         geometry={nodes.Sphere.geometry}
//                         material={materials['Sphere Material']}
//                         castShadow
//                         receiveShadow
//                         position={[-236.22, 1193.58, 219.08]}
//                         rotation={[-0.57, 1.17, 0.69]}
//                         scale={1}
//                     />
//                     <directionalLight
//                         name="Directional Light"
//                         castShadow
//                         intensity={0.7}
//                         shadow-mapSize-width={1024}
//                         shadow-mapSize-height={1024}
//                         shadow-camera-near={-10000}
//                         shadow-camera-far={100000}
//                         shadow-camera-left={-1250}
//                         shadow-camera-right={1250}
//                         shadow-camera-top={1250}
//                         shadow-camera-bottom={-1250}
//                         position={[200.01, 302.76, 300]}
//                         scale={1}
//                     />
//                     <OrthographicCamera name="1" makeDefault={true} far={10000} near={-50000} />
//                     <hemisphereLight name="Default Ambient Light" intensity={1.9} color="#eaeaea" />
//                 </scene>
//             </group>
//         </>
//     );
// }

/*
  Auto-generated by Spline
*/

import useSpline from '@splinetool/r3f-spline'
import { OrthographicCamera } from '@react-three/drei'

export default function Scene({ ...props }) {
    const { nodes, materials } = useSpline('https://prod.spline.design/acP0Eau3Hk7DEu1O/scene.splinecode')
    return (
        <>
            <color attach="background" args={['#000000']} />
            <group {...props} dispose={null}>
                <scene name="Scene">
                    <mesh
                        name="Cube"
                        geometry={nodes.Cube.geometry}
                        material={materials['Cube Material']}
                        castShadow
                        receiveShadow
                        position={[-910.82, -124.93, -1002.83]}
                        rotation={[-1.52, -0.09, 0]}
                        scale={[3.43, 8.26, 1]}
                    />
                    <mesh
                        name="Sphere"
                        geometry={nodes.Sphere.geometry}
                        material={materials['Sphere Material']}
                        castShadow
                        receiveShadow
                        position={[-236.22, 1193.58, 219.08]}
                        rotation={[-0.57, 1.17, 0.69]}
                        scale={1}
                    />
                    <directionalLight
                        name="Directional Light"
                        castShadow
                        intensity={0.7}
                        shadow-mapSize-width={1024}
                        shadow-mapSize-height={1024}
                        shadow-camera-near={-10000}
                        shadow-camera-far={100000}
                        shadow-camera-left={-1250}
                        shadow-camera-right={1250}
                        shadow-camera-top={1250}
                        shadow-camera-bottom={-1250}
                        position={[200.01, 302.76, 300]}
                        scale={1}
                    />
                    <OrthographicCamera name="1" makeDefault={true} far={10000} near={-50000} />
                    <hemisphereLight name="Default Ambient Light" intensity={1.9} color="#eaeaea" />
                </scene>
            </group>
        </>
    )
}
